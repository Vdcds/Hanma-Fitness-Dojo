// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id               String        @id @default(cuid())
  name             String?
  email            String        @unique
  imageUrl         String?
  age              Int?
  gender           String?
  weight           Float?
  intensityLevel   Intensity?
  dietPreference   String?
  height           Float?
  fitnessGoal      String?
  healthConditions String?
  role             UserRole      @default(USER)
  createdAt        DateTime      @default(now()) @map(name: "created_at")
  updatedAt        DateTime      @updatedAt @map(name: "updated_at")
  workoutPlan      WorkoutPlan[]
  dietPlans        DietPlan[]

  @@map(name: "users")
}

enum UserRole {
  USER
  TRAINER
  ADMIN
}

model WorkoutPlan {
  id         String     @id @default(cuid())
  difficulty Difficulty
  userId     String
  user       User       @relation(fields: [userId], references: [id])
  workouts   Workout[]

  @@map(name: "workout_plans")
}

model Workout {
  id            String        @id @default(cuid())
  title         String
  description   String?
  videoUrl      String?
  imageUrl      String?
  difficulty    Difficulty
  muscleGroup   MuscleGroup[]
  duration      Int?
  intensity     Intensity?
  WorkoutPlan   WorkoutPlan?  @relation(fields: [workoutPlanId], references: [id])
  workoutPlanId String?

  @@map(name: "workouts")
}

enum MuscleGroup {
  CHEST
  BACK
  LEGS
  ARMS
  SHOULDERS
  CORE
}

enum Difficulty {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

model DietPlan {
  id              String   @id @default(cuid())
  title           String
  description     String?
  nutritionalInfo String?
  mealType        MealType
  recipe          String?
  userId          String
  user            User     @relation(fields: [userId], references: [id])

  @@map(name: "diet_plans")
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}

enum Intensity {
  LOW
  MEDIUM
  HIGH
}
